---
import SunIcon from "../icons/Sun.astro";
import MoonIcon from "../icons/Moon.astro";
---

<div class="absolute ml-1 mr-1 top-6 right-6 md:-right-5">
  <button
    id="theme-toggle-btn"
    class="border-none flex hover:scale-125 transition"
  >
    <span class="sr-only">Elige el tema</span>
    <SunIcon
      id="light"
      class="theme-toggle-icon size-5 transition-all scale-100"
    />
    <MoonIcon
      id="dark"
      class="theme-toggle-icon absolute size-5 transition-all"
    />
  </button>
</div>

<style>
  #themes-menu.open {
    display: inline;
    animation: scale-up-center 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }

  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }
</style>

<script is:inline>
  let remove = null;
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");
  const buttonTheme = document.getElementById("theme-toggle-btn");
  const lightIcon = document.getElementById("light");

  const getThemePreference = () => {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("theme") ?? "system";
    }

    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  const updateIcon = (themePreference) => {
    document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
      element.style.scale = element.id === themePreference ? "1" : "0";
      if (themePreference == "system") {
        lightIcon.style.scale = "1";
      }
    });
  };

  const updateTheme = () => {
    if (remove != null) {
      remove();
    }
    matchMedia.addEventListener("change", updateTheme);
    remove = () => {
      matchMedia.removeEventListener("change", updateTheme);
    };

    const themePreference = getThemePreference();

    const isDark = themePreference === "dark";

    updateIcon(themePreference);
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");
  };

  updateTheme();

  buttonTheme.addEventListener("click", (e) => {
    e.stopPropagation();

    buttonTheme.classList.toggle("theme-dark");
    const isDarkMode = buttonTheme.classList.contains("theme-dark");
    localStorage.setItem("theme", isDarkMode ? "dark" : "light");
    updateTheme();
  });
</script>
